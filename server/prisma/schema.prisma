//ðŸ§©Don't Edit this file.âœ¨Generated in Sun Mar 17 2024 23:27:13 GMT+0100 (heure normale dâ€™Europe centrale)âœ¨
model Account {
  id              Int               @id @default(autoincrement())
  uuid            String            @unique @default(uuid())
  user_id         Int
  name            String
  description     String?
  currency        String
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  User            User              @relation(fields: [user_id], references: [id])
  AccountCategory AccountCategory[]
  Transactions    Transaction[]

  @@index([user_id])
}

model AccountCategory {
  account_id  Int
  category_id Int
  is_default  Boolean  @default(false)
  account     Account  @relation(fields: [account_id], references: [id])
  category    Category @relation("AccountCategory", fields: [category_id], references: [id])

  @@id([account_id, category_id])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id              Int               @id @default(autoincrement())
  uuid            String            @unique @default(uuid())
  name            String
  description     String?
  icon            String?
  color           String?
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  AccountCategory AccountCategory[] @relation(name: "AccountCategory")
  Transactions    Transaction[]
}

model Token {
  id         Int      @id @default(autoincrement())
  user_id    Int
  token      String   @unique
  type       String
  expires_at DateTime
  User       User     @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model Transaction {
  id                      Int       @id @default(autoincrement())
  uuid                    String    @unique @default(uuid())
  account_id              Int
  category_id             Int?
  amount                  Float
  status                  String
  transaction_date        DateTime  @default(now())
  transaction_type        String
  description             String?
  currency                String
  payment_method          String
  external_transaction_id String?
  refund_id               Int?
  Account                 Account   @relation(fields: [account_id], references: [id])
  Category                Category? @relation(fields: [category_id], references: [id])

  @@index([account_id])
  @@index([category_id])
}

model User {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique @default(uuid())
  email       String    @unique
  firstname   String
  lastname    String
  password    String
  language    String    @default("EN")
  is_admin    Boolean   @default(false)
  is_verified Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  Tokens      Token[]
  Accounts    Account[]
}
